<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.backend.mapper.ChapterRatingMapper">

    <!-- 插入章节评价 -->
    <insert id="insert" parameterType="org.example.backend.entity.pojo.ChapterRating" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO chapter_ratings (
            student_id, course_id, chapter_id, rating, comment, created_at, updated_at
        ) VALUES (
            #{studentId}, #{courseId}, #{chapterId}, #{rating}, #{comment}, #{createdAt}, #{updatedAt}
        )
    </insert>
    
    <!-- 更新章节评价 -->
    <update id="update" parameterType="org.example.backend.entity.pojo.ChapterRating">
        UPDATE chapter_ratings
        <set>
            <if test="rating != null">rating = #{rating},</if>
            <if test="comment != null">comment = #{comment},</if>
            <if test="updatedAt != null">updated_at = #{updatedAt},</if>
        </set>
        WHERE id = #{id}
    </update>
    
    <!-- 根据ID删除章节评价 -->
    <delete id="deleteById">
        DELETE FROM chapter_ratings WHERE id = #{id}
    </delete>
    
    <!-- 根据章节ID获取评价详情列表（包含学生信息） -->
    <select id="getChapterRatingDetails" resultMap="chapterRatingDetailResultMap">
        SELECT 
            cr.id,
            cr.student_id,
            cr.course_id,
            cr.chapter_id,
            cr.rating,
            cr.comment,
            cr.created_at,
            cr.updated_at,
            u.real_name AS student_name,
            cc.title AS chapter_title
        FROM chapter_ratings cr
        JOIN users u ON cr.student_id = u.user_id
        JOIN course_chapters cc ON cr.chapter_id = cc.id
        WHERE cr.chapter_id = #{chapterId}
        ORDER BY cr.created_at DESC
    </select>
    
    <!-- 根据学生ID查询该学生的所有评价 -->
    <select id="getStudentRatings" resultMap="chapterRatingDetailResultMap">
        SELECT 
            cr.id,
            cr.student_id,
            cr.course_id,
            cr.chapter_id,
            cr.rating,
            cr.comment,
            cr.created_at,
            cr.updated_at,
            u.real_name AS student_name,
            cc.title AS chapter_title
        FROM chapter_ratings cr
        JOIN users u ON cr.student_id = u.user_id
        JOIN course_chapters cc ON cr.chapter_id = cc.id
        WHERE cr.student_id = #{studentId}
        ORDER BY cr.created_at DESC
    </select>
    
    <!-- 章节评价详情结果映射 -->
    <resultMap id="chapterRatingDetailResultMap" type="org.example.backend.entity.dto.ChapterRatingDTO">
        <id property="id" column="id" />
        <result property="studentId" column="student_id" />
        <result property="studentName" column="student_name" />
        <result property="courseId" column="course_id" />
        <result property="chapterId" column="chapter_id" />
        <result property="chapterTitle" column="chapter_title" />
        <result property="rating" column="rating" />
        <result property="comment" column="comment" />
        <result property="createdAt" column="created_at" />
        <result property="updatedAt" column="updated_at" />
    </resultMap>

</mapper> 