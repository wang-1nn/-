{"version":3,"file":"vue3-virtual-scroller.esm.js","sources":["../src/config.js","../node_modules/vue3-observe-visibility2/dist/vue3-observe-visibility2.esm.js","../src/components/common.js","../src/utils.js","../src/components/RecycleScroller.vue","../src/components/RecycleScroller.vue?vue&type=template&id=093a936d&lang.js","../src/components/DynamicScroller.vue","../src/components/DynamicScroller.vue?vue&type=template&id=76e15f19&lang.js","../src/components/DynamicScrollerItem.js","../src/index.js"],"sourcesContent":["export default {\r\n  itemsLimit: 1000,\r\n}\r\n","function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction processOptions(value) {\n  var options;\n\n  if (typeof value === 'function') {\n    // Simple options (callback-only)\n    options = {\n      callback: value\n    };\n  } else {\n    // Options object\n    options = value;\n  }\n\n  return options;\n}\nfunction throttle(callback, delay) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var timeout;\n  var lastState;\n  var currentArgs;\n\n  var throttled = function throttled(state) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    currentArgs = args;\n    if (timeout && state === lastState) return;\n    var leading = options.leading;\n\n    if (typeof leading === 'function') {\n      leading = leading(state, lastState);\n    }\n\n    if ((!timeout || state !== lastState) && leading) {\n      callback.apply(void 0, [state].concat(_toConsumableArray(currentArgs)));\n    }\n\n    lastState = state;\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      callback.apply(void 0, [state].concat(_toConsumableArray(currentArgs)));\n      timeout = 0;\n    }, delay);\n  };\n\n  throttled._clear = function () {\n    clearTimeout(timeout);\n    timeout = null;\n  };\n\n  return throttled;\n}\nfunction deepEqual(val1, val2) {\n  if (val1 === val2) return true;\n\n  if (_typeof(val1) === 'object') {\n    // eslint-disable-next-line no-restricted-syntax\n    for (var key in val1) {\n      if (!deepEqual(val1[key], val2[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nvar VisibilityState =\n/*#__PURE__*/\nfunction () {\n  function VisibilityState(el, options, vnode) {\n    _classCallCheck(this, VisibilityState);\n\n    this.el = el;\n    this.observer = null;\n    this.frozen = false;\n    this.createObserver(options, vnode);\n  }\n\n  _createClass(VisibilityState, [{\n    key: \"createObserver\",\n    value: function createObserver(options) {\n      var _this = this;\n\n      if (this.observer) {\n        this.destroyObserver();\n      }\n\n      if (this.frozen) return;\n      this.options = processOptions(options);\n\n      this.callback = function (result, entry) {\n        _this.options.callback(result, entry);\n\n        if (result && _this.options.once) {\n          _this.frozen = true;\n\n          _this.destroyObserver();\n        }\n      }; // Throttle\n\n\n      if (this.callback && this.options.throttle) {\n        var _ref = this.options.throttleOptions || {},\n            _leading = _ref.leading;\n\n        this.callback = throttle(this.callback, this.options.throttle, {\n          leading: function leading(state) {\n            return _leading === 'both' || _leading === 'visible' && state || _leading === 'hidden' && !state;\n          }\n        });\n      }\n\n      this.oldResult = undefined;\n      this.observer = new IntersectionObserver(function (entries) {\n        var entry = entries[0];\n\n        if (entries.length > 1) {\n          var intersectingEntry = entries.find(function (e) {\n            return e.isIntersecting;\n          });\n\n          if (intersectingEntry) {\n            entry = intersectingEntry;\n          }\n        }\n\n        if (_this.callback) {\n          // Use isIntersecting if possible because browsers can report isIntersecting as true, but intersectionRatio as 0, when something very slowly enters the viewport.\n          var result = entry.isIntersecting && entry.intersectionRatio >= _this.threshold;\n          if (result === _this.oldResult) return;\n          _this.oldResult = result;\n\n          _this.callback(result, entry);\n        }\n      }, this.options.intersection); // Wait for the element to be in document\n\n      setTimeout(function () {\n        if (_this.observer) {\n          _this.observer.observe(_this.el);\n        }\n      });\n    }\n  }, {\n    key: \"destroyObserver\",\n    value: function destroyObserver() {\n      if (this.observer) {\n        this.observer.disconnect();\n        this.observer = null;\n      } // Cancel throttled call\n\n\n      if (this.callback && this.callback._clear) {\n        this.callback._clear();\n\n        this.callback = null;\n      }\n    }\n  }, {\n    key: \"threshold\",\n    get: function get() {\n      return this.options.intersection && this.options.intersection.threshold || 0;\n    }\n  }]);\n\n  return VisibilityState;\n}();\n\nfunction mounted(el, _ref2, vnode) {\n  var value = _ref2.value;\n  if (!value) return;\n\n  if (typeof IntersectionObserver === 'undefined') {\n    console.warn('[vue-observe-visibility] IntersectionObserver API is not available in your browser. Please install this polyfill: https://github.com/w3c/IntersectionObserver/tree/master/polyfill');\n  } else {\n    var state = new VisibilityState(el, value, vnode);\n    el._vue_visibilityState = state;\n  }\n}\n\nfunction unmounted(el) {\n  var state = el._vue_visibilityState;\n\n  if (state) {\n    state.destroyObserver();\n    delete el._vue_visibilityState;\n  }\n}\n\nfunction componentUpdated(el, _ref3, vnode) {\n  var value = _ref3.value,\n      oldValue = _ref3.oldValue;\n  if (deepEqual(value, oldValue)) return;\n  var state = el._vue_visibilityState;\n\n  if (!value) {\n    unmounted(el);\n    return;\n  }\n\n  if (state) {\n    state.createObserver(value, vnode);\n  } else {\n    mounted(el, {\n      value: value\n    }, vnode);\n  }\n}\n\nvar ObserveVisibility = {\n  mounted: mounted,\n  componentUpdated: componentUpdated,\n  unmounted: unmounted\n};\n\nvar version = \"0.0.3\";\n\nvar install = function install(app) {\n  app.use({\n    // eslint-disable-next-line no-shadow\n    install: function install(app) {\n      app.directive('observe-visibility', ObserveVisibility);\n    }\n  });\n}; // Plugin\n\n\nvar plugin = {\n  version: version,\n  install: install\n};\n\nexport default plugin;\nexport { ObserveVisibility, install };\n","export const props = {\r\n  items: {\r\n    type: Array,\r\n    required: true,\r\n  },\r\n\r\n  keyField: {\r\n    type: String,\r\n    default: 'id',\r\n  },\r\n\r\n  direction: {\r\n    type: String,\r\n    default: 'vertical',\r\n    validator: (value) => ['vertical', 'horizontal'].includes(value),\r\n  },\r\n}\r\n\r\nexport const scrollParent = (node) => {\r\n  const regex = /(auto|scroll)/;\r\n\r\n  function parents (node, ps) {\r\n    if (node.parentNode === null) { return ps; }\r\n    return parents(node.parentNode, ps.concat([node]));\r\n  }\r\n\r\n  function style (node, prop) {\r\n    return getComputedStyle(node, null).getPropertyValue(prop);\r\n  }\r\n\r\n  function overflow (node) {\r\n    return style(node, \"overflow\") + style(node, \"overflow-y\") + style(node, \"overflow-x\");\r\n  }\r\n\r\n  function scroll (node) {\r\n    return regex.test(overflow(node));\r\n  }\r\n\r\n  function scrollParent (node) {\r\n    if (!(node instanceof HTMLElement || node instanceof SVGElement)) {\r\n      return ;\r\n    }\r\n\r\n    const ps = parents(node.parentNode, []);\r\n\r\n    for (let i = 0; i < ps.length; i += 1) {\r\n      if (scroll(ps[i])) {\r\n        return ps[i];\r\n      }\r\n    }\r\n\r\n    return document.scrollingElement || document.documentElement;\r\n  }\r\n\r\n  return scrollParent(node);\r\n}\r\n\r\nexport function simpleArray () {\r\n  return this.items.length && typeof this.items[0] !== 'object'\r\n}\r\n","export let supportsPassive = false\r\n\r\nif (typeof window !== 'undefined') {\r\n  supportsPassive = false\r\n  try {\r\n    var opts = Object.defineProperty({}, 'passive', {\r\n      get () {\r\n        supportsPassive = true\r\n      },\r\n    })\r\n    window.addEventListener('test', null, opts)\r\n  } catch (e) {}\r\n}\r\n","<template>\r\n  <div\r\n    v-observe-visibility=\"handleVisibilityChange\"\r\n    class=\"vue-recycle-scroller\"\r\n    :class=\"{\r\n      ready,\r\n      'page-mode': pageMode,\r\n      [`direction-${direction}`]: true,\r\n    }\"\r\n    @scroll.passive=\"handleScroll\"\r\n  >\r\n    <div\r\n      v-if=\"$slots.before\"\r\n      class=\"vue-recycle-scroller__slot\"\r\n    >\r\n      <slot\r\n        name=\"before\"\r\n      />\r\n    </div>\r\n\r\n    <div\r\n      ref=\"wrapper\"\r\n      :style=\"{ [direction === 'vertical' ? 'minHeight' : 'minWidth']: totalSize + 'px' }\"\r\n      class=\"vue-recycle-scroller__item-wrapper\"\r\n    >\r\n      <div\r\n        v-for=\"view of pool\"\r\n        :key=\"view.nr.id\"\r\n        :style=\"ready ? { transform: `translate${direction === 'vertical' ? 'Y' : 'X'}(${view.position}px)` } : null\"\r\n        class=\"vue-recycle-scroller__item-view\"\r\n        :class=\"{ hover: hoverKey === view.nr.key }\"\r\n        @mouseenter=\"hoverKey = view.nr.key\"\r\n        @mouseleave=\"hoverKey = null\"\r\n      >\r\n        <slot\r\n          :item=\"view.item\"\r\n          :index=\"view.nr.index\"\r\n          :active=\"view.nr.used\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div\r\n      v-if=\"$slots.after\"\r\n      class=\"vue-recycle-scroller__slot\"\r\n    >\r\n      <slot\r\n        name=\"after\"\r\n      />\r\n    </div>\r\n\r\n    <ResizeObserver @notify=\"handleResize\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ResizeObserver } from 'vue3-resize'\r\nimport { ObserveVisibility } from 'vue3-observe-visibility2'\r\nimport config from '../config'\r\nimport { props, simpleArray, scrollParent } from './common'\r\nimport {supportsPassive} from '../utils'\r\nimport {defineComponent} from 'vue'\r\n\r\nlet uid = 0\r\n\r\nexport default defineComponent({\r\n  name: 'RecycleScroller',\r\n\r\n  components: {\r\n    ResizeObserver,\r\n  },\r\n\r\n  directives: {\r\n    ObserveVisibility,\r\n  },\r\n\r\n  props: {\r\n    ...props,\r\n\r\n    itemSize: {\r\n      type: Number,\r\n      default: null,\r\n    },\r\n\r\n    minItemSize: {\r\n      type: [Number, String],\r\n      default: null,\r\n    },\r\n\r\n    sizeField: {\r\n      type: String,\r\n      default: 'size',\r\n    },\r\n\r\n    typeField: {\r\n      type: String,\r\n      default: 'type',\r\n    },\r\n\r\n    buffer: {\r\n      type: Number,\r\n      default: 200,\r\n    },\r\n\r\n    pageMode: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    prerender: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n\r\n    emitUpdate: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n\r\n  emits: ['visible', 'hidden', 'resize', 'update'],\r\n\r\n  data () {\r\n    return {\r\n      pool: [],\r\n      totalSize: 0,\r\n      ready: false,\r\n      hoverKey: null,\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    sizes () {\r\n      if (this.itemSize === null) {\r\n        const sizes = {\r\n          '-1': { accumulator: 0 },\r\n        }\r\n        const items = this.items\r\n        const field = this.sizeField\r\n        const minItemSize = this.minItemSize\r\n        let computedMinSize = 10000\r\n        let accumulator = 0\r\n        let current\r\n        for (let i = 0, l = items.length; i < l; i++) {\r\n          current = items[i][field] || minItemSize\r\n          if (current < computedMinSize) {\r\n            computedMinSize = current\r\n          }\r\n          accumulator += current\r\n          sizes[i] = { accumulator, size: current }\r\n        }\r\n        // eslint-disable-next-line\r\n        this.$_computedMinItemSize = computedMinSize\r\n        return sizes\r\n      }\r\n      return []\r\n    },\r\n\r\n    simpleArray,\r\n  },\r\n\r\n  watch: {\r\n    items () {\r\n      this.updateVisibleItems(true)\r\n    },\r\n\r\n    pageMode () {\r\n      this.applyPageMode()\r\n      this.updateVisibleItems(false)\r\n    },\r\n\r\n    sizes: {\r\n      handler () {\r\n        this.updateVisibleItems(false)\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n\r\n  created () {\r\n    this.$_startIndex = 0\r\n    this.$_endIndex = 0\r\n    this.$_views = new Map()\r\n    this.$_unusedViews = new Map()\r\n    this.$_scrollDirty = false\r\n    this.$_lastUpdateScrollPosition = 0\r\n\r\n    // In SSR mode, we also prerender the same number of item for the first render\r\n    // to avoir mismatch between server and client templates\r\n    if (this.prerender) {\r\n      this.$_prerender = true\r\n      this.updateVisibleItems(false)\r\n    }\r\n  },\r\n\r\n  mounted () {\r\n    this.applyPageMode()\r\n    this.$nextTick(() => {\r\n      // In SSR mode, render the real number of visible items\r\n      this.$_prerender = false\r\n      this.updateVisibleItems(true)\r\n      this.ready = true\r\n    })\r\n  },\r\n\r\n  beforeUnmount () {\r\n    this.removeListeners()\r\n  },\r\n\r\n  methods: {\r\n    addView (pool, index, item, key, type) {\r\n      const view = {\r\n        item,\r\n        position: 0,\r\n      }\r\n      view.nr = {\r\n        id: uid++,\r\n        index,\r\n        used: true,\r\n        key,\r\n        type,\r\n      }\r\n      pool.push(view)\r\n      return view\r\n    },\r\n\r\n    unuseView (view, fake = false) {\r\n      const unusedViews = this.$_unusedViews\r\n      const type = view.nr.type\r\n      let unusedPool = unusedViews.get(type)\r\n      if (!unusedPool) {\r\n        unusedPool = []\r\n        unusedViews.set(type, unusedPool)\r\n      }\r\n      unusedPool.push(view)\r\n      if (!fake) {\r\n        view.nr.used = false\r\n        view.position = -9999\r\n        this.$_views.delete(view.nr.key)\r\n      }\r\n    },\r\n\r\n    handleResize () {\r\n      this.$emit('resize')\r\n      if (this.ready) this.updateVisibleItems(false)\r\n    },\r\n\r\n    handleScroll (event) {\r\n      if (!this.$_scrollDirty) {\r\n        this.$_scrollDirty = true\r\n        requestAnimationFrame(() => {\r\n          this.$_scrollDirty = false\r\n          const { continuous } = this.updateVisibleItems(false, true)\r\n\r\n          // It seems sometimes chrome doesn't fire scroll event :/\r\n          // When non continous scrolling is ending, we force a refresh\r\n          if (!continuous) {\r\n            clearTimeout(this.$_refreshTimout)\r\n            this.$_refreshTimout = setTimeout(this.handleScroll, 100)\r\n          }\r\n        })\r\n      }\r\n    },\r\n\r\n    handleVisibilityChange (isVisible, entry) {\r\n      if (this.ready) {\r\n        if (isVisible || entry.boundingClientRect.width !== 0 || entry.boundingClientRect.height !== 0) {\r\n          this.$emit('visible')\r\n          requestAnimationFrame(() => {\r\n            this.updateVisibleItems(false)\r\n          })\r\n        } else {\r\n          this.$emit('hidden')\r\n        }\r\n      }\r\n    },\r\n\r\n    updateVisibleItems (checkItem, checkPositionDiff = false) {\r\n      const itemSize = this.itemSize\r\n      const minItemSize = this.$_computedMinItemSize\r\n      const typeField = this.typeField\r\n      const keyField = this.simpleArray ? null : this.keyField\r\n      const items = this.items\r\n      const count = items.length\r\n      const sizes = this.sizes\r\n      const views = this.$_views\r\n      const unusedViews = this.$_unusedViews\r\n      const pool = this.pool\r\n      let startIndex, endIndex\r\n      let totalSize\r\n\r\n      if (!count) {\r\n        startIndex = endIndex = totalSize = 0\r\n      } else if (this.$_prerender) {\r\n        startIndex = 0\r\n        endIndex = this.prerender\r\n        totalSize = null\r\n      } else {\r\n        const scroll = this.getScroll()\r\n\r\n        // Skip update if use hasn't scrolled enough\r\n        if (checkPositionDiff) {\r\n          let positionDiff = scroll.start - this.$_lastUpdateScrollPosition\r\n          if (positionDiff < 0) positionDiff = -positionDiff\r\n          if ((itemSize === null && positionDiff < minItemSize) || positionDiff < itemSize) {\r\n            return {\r\n              continuous: true,\r\n            }\r\n          }\r\n        }\r\n        this.$_lastUpdateScrollPosition = scroll.start\r\n\r\n        const buffer = this.buffer\r\n        scroll.start -= buffer\r\n        scroll.end += buffer\r\n\r\n        // Variable size mode\r\n        if (itemSize === null) {\r\n          let h\r\n          let a = 0\r\n          let b = count - 1\r\n          let i = ~~(count / 2)\r\n          let oldI\r\n\r\n          // Searching for startIndex\r\n          do {\r\n            oldI = i\r\n            h = sizes[i].accumulator\r\n            if (h < scroll.start) {\r\n              a = i\r\n            } else if (i < count - 1 && sizes[i + 1].accumulator > scroll.start) {\r\n              b = i\r\n            }\r\n            i = ~~((a + b) / 2)\r\n          } while (i !== oldI)\r\n          i < 0 && (i = 0)\r\n          startIndex = i\r\n\r\n          // For container style\r\n          totalSize = sizes[count - 1].accumulator\r\n\r\n          // Searching for endIndex\r\n          for (endIndex = i; endIndex < count && sizes[endIndex].accumulator < scroll.end; endIndex++);\r\n          if (endIndex === -1) {\r\n            endIndex = items.length - 1\r\n          } else {\r\n            endIndex++\r\n            // Bounds\r\n            endIndex > count && (endIndex = count)\r\n          }\r\n        } else {\r\n          // Fixed size mode\r\n          startIndex = ~~(scroll.start / itemSize)\r\n          endIndex = Math.ceil(scroll.end / itemSize)\r\n\r\n          // Bounds\r\n          startIndex < 0 && (startIndex = 0)\r\n          endIndex > count && (endIndex = count)\r\n\r\n          totalSize = count * itemSize\r\n        }\r\n      }\r\n\r\n      if (endIndex - startIndex > config.itemsLimit) {\r\n        this.itemsLimitError()\r\n      }\r\n\r\n      this.totalSize = totalSize\r\n\r\n      let view\r\n\r\n      const continuous = startIndex <= this.$_endIndex && endIndex >= this.$_startIndex\r\n\r\n      if (this.$_continuous !== continuous) {\r\n        if (continuous) {\r\n          views.clear()\r\n          unusedViews.clear()\r\n          for (let i = 0, l = pool.length; i < l; i++) {\r\n            view = pool[i]\r\n            this.unuseView(view)\r\n          }\r\n        }\r\n        this.$_continuous = continuous\r\n      } else if (continuous) {\r\n        for (let i = 0, l = pool.length; i < l; i++) {\r\n          view = pool[i]\r\n          if (view.nr.used) {\r\n            // Update view item index\r\n            if (checkItem) {\r\n              view.nr.index = items.findIndex(\r\n                item => keyField ? item[keyField] === view.item[keyField] : item === view.item,\r\n              )\r\n            }\r\n\r\n            // Check if index is still in visible range\r\n            if (\r\n              view.nr.index === -1 ||\r\n              view.nr.index < startIndex ||\r\n              view.nr.index >= endIndex\r\n            ) {\r\n              this.unuseView(view)\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      const unusedIndex = continuous ? null : new Map()\r\n\r\n      let item, type, unusedPool\r\n      let v\r\n      for (let i = startIndex; i < endIndex; i++) {\r\n        item = items[i]\r\n        const key = keyField ? item[keyField] : item\r\n        if (key == null) {\r\n          throw new Error(`Key is ${key} on item (keyField is '${keyField}')`)\r\n        }\r\n        view = views.get(key)\r\n\r\n        if (!itemSize && !sizes[i].size) {\r\n          if (view) this.unuseView(view)\r\n          continue\r\n        }\r\n\r\n        // No view assigned to item\r\n        if (!view) {\r\n          type = item[typeField]\r\n          unusedPool = unusedViews.get(type)\r\n\r\n          if (continuous) {\r\n            // Reuse existing view\r\n            if (unusedPool && unusedPool.length) {\r\n              view = unusedPool.pop()\r\n              view.item = item\r\n              view.nr.used = true\r\n              view.nr.index = i\r\n              view.nr.key = key\r\n              view.nr.type = type\r\n            } else {\r\n              view = this.addView(pool, i, item, key, type)\r\n            }\r\n          } else {\r\n            // Use existing view\r\n            // We don't care if they are already used\r\n            // because we are not in continous scrolling\r\n            v = unusedIndex.get(type) || 0\r\n\r\n            if (!unusedPool || v >= unusedPool.length) {\r\n              view = this.addView(pool, i, item, key, type)\r\n              this.unuseView(view, true)\r\n              unusedPool = unusedViews.get(type)\r\n            }\r\n\r\n            view = unusedPool[v]\r\n            view.item = item\r\n            view.nr.used = true\r\n            view.nr.index = i\r\n            view.nr.key = key\r\n            view.nr.type = type\r\n            unusedIndex.set(type, v + 1)\r\n            v++\r\n          }\r\n          views.set(key, view)\r\n        } else {\r\n          view.nr.used = true\r\n          view.item = item\r\n        }\r\n\r\n        // Update position\r\n        if (itemSize === null) {\r\n          view.position = sizes[i - 1].accumulator\r\n        } else {\r\n          view.position = i * itemSize\r\n        }\r\n      }\r\n\r\n      this.$_startIndex = startIndex\r\n      this.$_endIndex = endIndex\r\n\r\n      if (this.emitUpdate) this.$emit('update', startIndex, endIndex)\r\n\r\n      // After the user has finished scrolling\r\n      // Sort views so text selection is correct\r\n      clearTimeout(this.$_sortTimer)\r\n      this.$_sortTimer = setTimeout(this.sortViews, 300)\r\n\r\n      return {\r\n        continuous,\r\n      }\r\n    },\r\n\r\n    getListenerTarget () {\r\n      let target = scrollParent(this.$el)\r\n      // Fix global scroll target for Chrome and Safari\r\n      if (window.document && (target === window.document.documentElement || target === window.document.body)) {\r\n        target = window\r\n      }\r\n      return target\r\n    },\r\n\r\n    getScroll () {\r\n      const { $el: el, direction } = this\r\n      const isVertical = direction === 'vertical'\r\n      let scrollState\r\n\r\n      if (this.pageMode) {\r\n        const bounds = el.getBoundingClientRect()\r\n        const boundsSize = isVertical ? bounds.height : bounds.width\r\n        let start = -(isVertical ? bounds.top : bounds.left)\r\n        let size = isVertical ? window.innerHeight : window.innerWidth\r\n        if (start < 0) {\r\n          size += start\r\n          start = 0\r\n        }\r\n        if (start + size > boundsSize) {\r\n          size = boundsSize - start\r\n        }\r\n        scrollState = {\r\n          start,\r\n          end: start + size,\r\n        }\r\n      } else if (isVertical) {\r\n        scrollState = {\r\n          start: el.scrollTop,\r\n          end: el.scrollTop + el.clientHeight,\r\n        }\r\n      } else {\r\n        scrollState = {\r\n          start: el.scrollLeft,\r\n          end: el.scrollLeft + el.clientWidth,\r\n        }\r\n      }\r\n\r\n      return scrollState\r\n    },\r\n\r\n    applyPageMode () {\r\n      if (this.pageMode) {\r\n        this.addListeners()\r\n      } else {\r\n        this.removeListeners()\r\n      }\r\n    },\r\n\r\n    addListeners () {\r\n      this.listenerTarget = this.getListenerTarget()\r\n      this.listenerTarget.addEventListener('scroll', this.handleScroll, supportsPassive ? {\r\n        passive: true,\r\n      } : false)\r\n      this.listenerTarget.addEventListener('resize', this.handleResize)\r\n    },\r\n\r\n    removeListeners () {\r\n      if (!this.listenerTarget) {\r\n        return\r\n      }\r\n\r\n      this.listenerTarget.removeEventListener('scroll', this.handleScroll)\r\n      this.listenerTarget.removeEventListener('resize', this.handleResize)\r\n\r\n      this.listenerTarget = null\r\n    },\r\n\r\n    scrollToItem (index) {\r\n      let scroll\r\n      if (this.itemSize === null) {\r\n        scroll = index > 0 ? this.sizes[index - 1].accumulator : 0\r\n      } else {\r\n        scroll = index * this.itemSize\r\n      }\r\n      this.scrollToPosition(scroll)\r\n    },\r\n\r\n    scrollToPosition (position) {\r\n      if (this.direction === 'vertical') {\r\n        this.$el.scrollTop = position\r\n      } else {\r\n        this.$el.scrollLeft = position\r\n      }\r\n    },\r\n\r\n    itemsLimitError () {\r\n      setTimeout(() => {\r\n        console.log('It seems the scroller element isn\\'t scrolling, so it tries to render all the items at once.', 'Scroller:', this.$el)\r\n        console.log('Make sure the scroller has a fixed height (or width) and \\'overflow-y\\' (or \\'overflow-x\\') set to \\'auto\\' so it can scroll correctly and only render the items visible in the scroll viewport.')\r\n      })\r\n      throw new Error('Rendered items limit reached')\r\n    },\r\n\r\n    sortViews () {\r\n      this.pool.sort((viewA, viewB) => viewA.nr.index - viewB.nr.index)\r\n    },\r\n  },\r\n})\r\n</script>\r\n\r\n<style>\r\n.vue-recycle-scroller {\r\n  position: relative;\r\n}\r\n\r\n.vue-recycle-scroller.direction-vertical:not(.page-mode) {\r\n  overflow-y: auto;\r\n}\r\n\r\n.vue-recycle-scroller.direction-horizontal:not(.page-mode) {\r\n  overflow-x: auto;\r\n}\r\n\r\n.vue-recycle-scroller.direction-horizontal {\r\n  display: flex;\r\n}\r\n\r\n.vue-recycle-scroller__slot {\r\n  flex: auto 0 0;\r\n}\r\n\r\n.vue-recycle-scroller__item-wrapper {\r\n  flex: 1;\r\n  box-sizing: border-box;\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n\r\n.vue-recycle-scroller.ready .vue-recycle-scroller__item-view {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  will-change: transform;\r\n}\r\n\r\n.vue-recycle-scroller.direction-vertical .vue-recycle-scroller__item-wrapper {\r\n  width: 100%;\r\n}\r\n\r\n.vue-recycle-scroller.direction-horizontal .vue-recycle-scroller__item-wrapper {\r\n  height: 100%;\r\n}\r\n\r\n.vue-recycle-scroller.ready.direction-vertical .vue-recycle-scroller__item-view {\r\n  width: 100%;\r\n}\r\n\r\n.vue-recycle-scroller.ready.direction-horizontal .vue-recycle-scroller__item-view {\r\n  height: 100%;\r\n}\r\n</style>\r\n","<template>\r\n  <div\r\n    v-observe-visibility=\"handleVisibilityChange\"\r\n    class=\"vue-recycle-scroller\"\r\n    :class=\"{\r\n      ready,\r\n      'page-mode': pageMode,\r\n      [`direction-${direction}`]: true,\r\n    }\"\r\n    @scroll.passive=\"handleScroll\"\r\n  >\r\n    <div\r\n      v-if=\"$slots.before\"\r\n      class=\"vue-recycle-scroller__slot\"\r\n    >\r\n      <slot\r\n        name=\"before\"\r\n      />\r\n    </div>\r\n\r\n    <div\r\n      ref=\"wrapper\"\r\n      :style=\"{ [direction === 'vertical' ? 'minHeight' : 'minWidth']: totalSize + 'px' }\"\r\n      class=\"vue-recycle-scroller__item-wrapper\"\r\n    >\r\n      <div\r\n        v-for=\"view of pool\"\r\n        :key=\"view.nr.id\"\r\n        :style=\"ready ? { transform: `translate${direction === 'vertical' ? 'Y' : 'X'}(${view.position}px)` } : null\"\r\n        class=\"vue-recycle-scroller__item-view\"\r\n        :class=\"{ hover: hoverKey === view.nr.key }\"\r\n        @mouseenter=\"hoverKey = view.nr.key\"\r\n        @mouseleave=\"hoverKey = null\"\r\n      >\r\n        <slot\r\n          :item=\"view.item\"\r\n          :index=\"view.nr.index\"\r\n          :active=\"view.nr.used\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div\r\n      v-if=\"$slots.after\"\r\n      class=\"vue-recycle-scroller__slot\"\r\n    >\r\n      <slot\r\n        name=\"after\"\r\n      />\r\n    </div>\r\n\r\n    <ResizeObserver @notify=\"handleResize\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ResizeObserver } from 'vue3-resize'\r\nimport { ObserveVisibility } from 'vue3-observe-visibility2'\r\nimport config from '../config'\r\nimport { props, simpleArray, scrollParent } from './common'\r\nimport {supportsPassive} from '../utils'\r\nimport {defineComponent} from 'vue'\r\n\r\nlet uid = 0\r\n\r\nexport default defineComponent({\r\n  name: 'RecycleScroller',\r\n\r\n  components: {\r\n    ResizeObserver,\r\n  },\r\n\r\n  directives: {\r\n    ObserveVisibility,\r\n  },\r\n\r\n  props: {\r\n    ...props,\r\n\r\n    itemSize: {\r\n      type: Number,\r\n      default: null,\r\n    },\r\n\r\n    minItemSize: {\r\n      type: [Number, String],\r\n      default: null,\r\n    },\r\n\r\n    sizeField: {\r\n      type: String,\r\n      default: 'size',\r\n    },\r\n\r\n    typeField: {\r\n      type: String,\r\n      default: 'type',\r\n    },\r\n\r\n    buffer: {\r\n      type: Number,\r\n      default: 200,\r\n    },\r\n\r\n    pageMode: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    prerender: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n\r\n    emitUpdate: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n\r\n  emits: ['visible', 'hidden', 'resize', 'update'],\r\n\r\n  data () {\r\n    return {\r\n      pool: [],\r\n      totalSize: 0,\r\n      ready: false,\r\n      hoverKey: null,\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    sizes () {\r\n      if (this.itemSize === null) {\r\n        const sizes = {\r\n          '-1': { accumulator: 0 },\r\n        }\r\n        const items = this.items\r\n        const field = this.sizeField\r\n        const minItemSize = this.minItemSize\r\n        let computedMinSize = 10000\r\n        let accumulator = 0\r\n        let current\r\n        for (let i = 0, l = items.length; i < l; i++) {\r\n          current = items[i][field] || minItemSize\r\n          if (current < computedMinSize) {\r\n            computedMinSize = current\r\n          }\r\n          accumulator += current\r\n          sizes[i] = { accumulator, size: current }\r\n        }\r\n        // eslint-disable-next-line\r\n        this.$_computedMinItemSize = computedMinSize\r\n        return sizes\r\n      }\r\n      return []\r\n    },\r\n\r\n    simpleArray,\r\n  },\r\n\r\n  watch: {\r\n    items () {\r\n      this.updateVisibleItems(true)\r\n    },\r\n\r\n    pageMode () {\r\n      this.applyPageMode()\r\n      this.updateVisibleItems(false)\r\n    },\r\n\r\n    sizes: {\r\n      handler () {\r\n        this.updateVisibleItems(false)\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n\r\n  created () {\r\n    this.$_startIndex = 0\r\n    this.$_endIndex = 0\r\n    this.$_views = new Map()\r\n    this.$_unusedViews = new Map()\r\n    this.$_scrollDirty = false\r\n    this.$_lastUpdateScrollPosition = 0\r\n\r\n    // In SSR mode, we also prerender the same number of item for the first render\r\n    // to avoir mismatch between server and client templates\r\n    if (this.prerender) {\r\n      this.$_prerender = true\r\n      this.updateVisibleItems(false)\r\n    }\r\n  },\r\n\r\n  mounted () {\r\n    this.applyPageMode()\r\n    this.$nextTick(() => {\r\n      // In SSR mode, render the real number of visible items\r\n      this.$_prerender = false\r\n      this.updateVisibleItems(true)\r\n      this.ready = true\r\n    })\r\n  },\r\n\r\n  beforeUnmount () {\r\n    this.removeListeners()\r\n  },\r\n\r\n  methods: {\r\n    addView (pool, index, item, key, type) {\r\n      const view = {\r\n        item,\r\n        position: 0,\r\n      }\r\n      view.nr = {\r\n        id: uid++,\r\n        index,\r\n        used: true,\r\n        key,\r\n        type,\r\n      }\r\n      pool.push(view)\r\n      return view\r\n    },\r\n\r\n    unuseView (view, fake = false) {\r\n      const unusedViews = this.$_unusedViews\r\n      const type = view.nr.type\r\n      let unusedPool = unusedViews.get(type)\r\n      if (!unusedPool) {\r\n        unusedPool = []\r\n        unusedViews.set(type, unusedPool)\r\n      }\r\n      unusedPool.push(view)\r\n      if (!fake) {\r\n        view.nr.used = false\r\n        view.position = -9999\r\n        this.$_views.delete(view.nr.key)\r\n      }\r\n    },\r\n\r\n    handleResize () {\r\n      this.$emit('resize')\r\n      if (this.ready) this.updateVisibleItems(false)\r\n    },\r\n\r\n    handleScroll (event) {\r\n      if (!this.$_scrollDirty) {\r\n        this.$_scrollDirty = true\r\n        requestAnimationFrame(() => {\r\n          this.$_scrollDirty = false\r\n          const { continuous } = this.updateVisibleItems(false, true)\r\n\r\n          // It seems sometimes chrome doesn't fire scroll event :/\r\n          // When non continous scrolling is ending, we force a refresh\r\n          if (!continuous) {\r\n            clearTimeout(this.$_refreshTimout)\r\n            this.$_refreshTimout = setTimeout(this.handleScroll, 100)\r\n          }\r\n        })\r\n      }\r\n    },\r\n\r\n    handleVisibilityChange (isVisible, entry) {\r\n      if (this.ready) {\r\n        if (isVisible || entry.boundingClientRect.width !== 0 || entry.boundingClientRect.height !== 0) {\r\n          this.$emit('visible')\r\n          requestAnimationFrame(() => {\r\n            this.updateVisibleItems(false)\r\n          })\r\n        } else {\r\n          this.$emit('hidden')\r\n        }\r\n      }\r\n    },\r\n\r\n    updateVisibleItems (checkItem, checkPositionDiff = false) {\r\n      const itemSize = this.itemSize\r\n      const minItemSize = this.$_computedMinItemSize\r\n      const typeField = this.typeField\r\n      const keyField = this.simpleArray ? null : this.keyField\r\n      const items = this.items\r\n      const count = items.length\r\n      const sizes = this.sizes\r\n      const views = this.$_views\r\n      const unusedViews = this.$_unusedViews\r\n      const pool = this.pool\r\n      let startIndex, endIndex\r\n      let totalSize\r\n\r\n      if (!count) {\r\n        startIndex = endIndex = totalSize = 0\r\n      } else if (this.$_prerender) {\r\n        startIndex = 0\r\n        endIndex = this.prerender\r\n        totalSize = null\r\n      } else {\r\n        const scroll = this.getScroll()\r\n\r\n        // Skip update if use hasn't scrolled enough\r\n        if (checkPositionDiff) {\r\n          let positionDiff = scroll.start - this.$_lastUpdateScrollPosition\r\n          if (positionDiff < 0) positionDiff = -positionDiff\r\n          if ((itemSize === null && positionDiff < minItemSize) || positionDiff < itemSize) {\r\n            return {\r\n              continuous: true,\r\n            }\r\n          }\r\n        }\r\n        this.$_lastUpdateScrollPosition = scroll.start\r\n\r\n        const buffer = this.buffer\r\n        scroll.start -= buffer\r\n        scroll.end += buffer\r\n\r\n        // Variable size mode\r\n        if (itemSize === null) {\r\n          let h\r\n          let a = 0\r\n          let b = count - 1\r\n          let i = ~~(count / 2)\r\n          let oldI\r\n\r\n          // Searching for startIndex\r\n          do {\r\n            oldI = i\r\n            h = sizes[i].accumulator\r\n            if (h < scroll.start) {\r\n              a = i\r\n            } else if (i < count - 1 && sizes[i + 1].accumulator > scroll.start) {\r\n              b = i\r\n            }\r\n            i = ~~((a + b) / 2)\r\n          } while (i !== oldI)\r\n          i < 0 && (i = 0)\r\n          startIndex = i\r\n\r\n          // For container style\r\n          totalSize = sizes[count - 1].accumulator\r\n\r\n          // Searching for endIndex\r\n          for (endIndex = i; endIndex < count && sizes[endIndex].accumulator < scroll.end; endIndex++);\r\n          if (endIndex === -1) {\r\n            endIndex = items.length - 1\r\n          } else {\r\n            endIndex++\r\n            // Bounds\r\n            endIndex > count && (endIndex = count)\r\n          }\r\n        } else {\r\n          // Fixed size mode\r\n          startIndex = ~~(scroll.start / itemSize)\r\n          endIndex = Math.ceil(scroll.end / itemSize)\r\n\r\n          // Bounds\r\n          startIndex < 0 && (startIndex = 0)\r\n          endIndex > count && (endIndex = count)\r\n\r\n          totalSize = count * itemSize\r\n        }\r\n      }\r\n\r\n      if (endIndex - startIndex > config.itemsLimit) {\r\n        this.itemsLimitError()\r\n      }\r\n\r\n      this.totalSize = totalSize\r\n\r\n      let view\r\n\r\n      const continuous = startIndex <= this.$_endIndex && endIndex >= this.$_startIndex\r\n\r\n      if (this.$_continuous !== continuous) {\r\n        if (continuous) {\r\n          views.clear()\r\n          unusedViews.clear()\r\n          for (let i = 0, l = pool.length; i < l; i++) {\r\n            view = pool[i]\r\n            this.unuseView(view)\r\n          }\r\n        }\r\n        this.$_continuous = continuous\r\n      } else if (continuous) {\r\n        for (let i = 0, l = pool.length; i < l; i++) {\r\n          view = pool[i]\r\n          if (view.nr.used) {\r\n            // Update view item index\r\n            if (checkItem) {\r\n              view.nr.index = items.findIndex(\r\n                item => keyField ? item[keyField] === view.item[keyField] : item === view.item,\r\n              )\r\n            }\r\n\r\n            // Check if index is still in visible range\r\n            if (\r\n              view.nr.index === -1 ||\r\n              view.nr.index < startIndex ||\r\n              view.nr.index >= endIndex\r\n            ) {\r\n              this.unuseView(view)\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      const unusedIndex = continuous ? null : new Map()\r\n\r\n      let item, type, unusedPool\r\n      let v\r\n      for (let i = startIndex; i < endIndex; i++) {\r\n        item = items[i]\r\n        const key = keyField ? item[keyField] : item\r\n        if (key == null) {\r\n          throw new Error(`Key is ${key} on item (keyField is '${keyField}')`)\r\n        }\r\n        view = views.get(key)\r\n\r\n        if (!itemSize && !sizes[i].size) {\r\n          if (view) this.unuseView(view)\r\n          continue\r\n        }\r\n\r\n        // No view assigned to item\r\n        if (!view) {\r\n          type = item[typeField]\r\n          unusedPool = unusedViews.get(type)\r\n\r\n          if (continuous) {\r\n            // Reuse existing view\r\n            if (unusedPool && unusedPool.length) {\r\n              view = unusedPool.pop()\r\n              view.item = item\r\n              view.nr.used = true\r\n              view.nr.index = i\r\n              view.nr.key = key\r\n              view.nr.type = type\r\n            } else {\r\n              view = this.addView(pool, i, item, key, type)\r\n            }\r\n          } else {\r\n            // Use existing view\r\n            // We don't care if they are already used\r\n            // because we are not in continous scrolling\r\n            v = unusedIndex.get(type) || 0\r\n\r\n            if (!unusedPool || v >= unusedPool.length) {\r\n              view = this.addView(pool, i, item, key, type)\r\n              this.unuseView(view, true)\r\n              unusedPool = unusedViews.get(type)\r\n            }\r\n\r\n            view = unusedPool[v]\r\n            view.item = item\r\n            view.nr.used = true\r\n            view.nr.index = i\r\n            view.nr.key = key\r\n            view.nr.type = type\r\n            unusedIndex.set(type, v + 1)\r\n            v++\r\n          }\r\n          views.set(key, view)\r\n        } else {\r\n          view.nr.used = true\r\n          view.item = item\r\n        }\r\n\r\n        // Update position\r\n        if (itemSize === null) {\r\n          view.position = sizes[i - 1].accumulator\r\n        } else {\r\n          view.position = i * itemSize\r\n        }\r\n      }\r\n\r\n      this.$_startIndex = startIndex\r\n      this.$_endIndex = endIndex\r\n\r\n      if (this.emitUpdate) this.$emit('update', startIndex, endIndex)\r\n\r\n      // After the user has finished scrolling\r\n      // Sort views so text selection is correct\r\n      clearTimeout(this.$_sortTimer)\r\n      this.$_sortTimer = setTimeout(this.sortViews, 300)\r\n\r\n      return {\r\n        continuous,\r\n      }\r\n    },\r\n\r\n    getListenerTarget () {\r\n      let target = scrollParent(this.$el)\r\n      // Fix global scroll target for Chrome and Safari\r\n      if (window.document && (target === window.document.documentElement || target === window.document.body)) {\r\n        target = window\r\n      }\r\n      return target\r\n    },\r\n\r\n    getScroll () {\r\n      const { $el: el, direction } = this\r\n      const isVertical = direction === 'vertical'\r\n      let scrollState\r\n\r\n      if (this.pageMode) {\r\n        const bounds = el.getBoundingClientRect()\r\n        const boundsSize = isVertical ? bounds.height : bounds.width\r\n        let start = -(isVertical ? bounds.top : bounds.left)\r\n        let size = isVertical ? window.innerHeight : window.innerWidth\r\n        if (start < 0) {\r\n          size += start\r\n          start = 0\r\n        }\r\n        if (start + size > boundsSize) {\r\n          size = boundsSize - start\r\n        }\r\n        scrollState = {\r\n          start,\r\n          end: start + size,\r\n        }\r\n      } else if (isVertical) {\r\n        scrollState = {\r\n          start: el.scrollTop,\r\n          end: el.scrollTop + el.clientHeight,\r\n        }\r\n      } else {\r\n        scrollState = {\r\n          start: el.scrollLeft,\r\n          end: el.scrollLeft + el.clientWidth,\r\n        }\r\n      }\r\n\r\n      return scrollState\r\n    },\r\n\r\n    applyPageMode () {\r\n      if (this.pageMode) {\r\n        this.addListeners()\r\n      } else {\r\n        this.removeListeners()\r\n      }\r\n    },\r\n\r\n    addListeners () {\r\n      this.listenerTarget = this.getListenerTarget()\r\n      this.listenerTarget.addEventListener('scroll', this.handleScroll, supportsPassive ? {\r\n        passive: true,\r\n      } : false)\r\n      this.listenerTarget.addEventListener('resize', this.handleResize)\r\n    },\r\n\r\n    removeListeners () {\r\n      if (!this.listenerTarget) {\r\n        return\r\n      }\r\n\r\n      this.listenerTarget.removeEventListener('scroll', this.handleScroll)\r\n      this.listenerTarget.removeEventListener('resize', this.handleResize)\r\n\r\n      this.listenerTarget = null\r\n    },\r\n\r\n    scrollToItem (index) {\r\n      let scroll\r\n      if (this.itemSize === null) {\r\n        scroll = index > 0 ? this.sizes[index - 1].accumulator : 0\r\n      } else {\r\n        scroll = index * this.itemSize\r\n      }\r\n      this.scrollToPosition(scroll)\r\n    },\r\n\r\n    scrollToPosition (position) {\r\n      if (this.direction === 'vertical') {\r\n        this.$el.scrollTop = position\r\n      } else {\r\n        this.$el.scrollLeft = position\r\n      }\r\n    },\r\n\r\n    itemsLimitError () {\r\n      setTimeout(() => {\r\n        console.log('It seems the scroller element isn\\'t scrolling, so it tries to render all the items at once.', 'Scroller:', this.$el)\r\n        console.log('Make sure the scroller has a fixed height (or width) and \\'overflow-y\\' (or \\'overflow-x\\') set to \\'auto\\' so it can scroll correctly and only render the items visible in the scroll viewport.')\r\n      })\r\n      throw new Error('Rendered items limit reached')\r\n    },\r\n\r\n    sortViews () {\r\n      this.pool.sort((viewA, viewB) => viewA.nr.index - viewB.nr.index)\r\n    },\r\n  },\r\n})\r\n</script>\r\n\r\n<style>\r\n.vue-recycle-scroller {\r\n  position: relative;\r\n}\r\n\r\n.vue-recycle-scroller.direction-vertical:not(.page-mode) {\r\n  overflow-y: auto;\r\n}\r\n\r\n.vue-recycle-scroller.direction-horizontal:not(.page-mode) {\r\n  overflow-x: auto;\r\n}\r\n\r\n.vue-recycle-scroller.direction-horizontal {\r\n  display: flex;\r\n}\r\n\r\n.vue-recycle-scroller__slot {\r\n  flex: auto 0 0;\r\n}\r\n\r\n.vue-recycle-scroller__item-wrapper {\r\n  flex: 1;\r\n  box-sizing: border-box;\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n\r\n.vue-recycle-scroller.ready .vue-recycle-scroller__item-view {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  will-change: transform;\r\n}\r\n\r\n.vue-recycle-scroller.direction-vertical .vue-recycle-scroller__item-wrapper {\r\n  width: 100%;\r\n}\r\n\r\n.vue-recycle-scroller.direction-horizontal .vue-recycle-scroller__item-wrapper {\r\n  height: 100%;\r\n}\r\n\r\n.vue-recycle-scroller.ready.direction-vertical .vue-recycle-scroller__item-view {\r\n  width: 100%;\r\n}\r\n\r\n.vue-recycle-scroller.ready.direction-horizontal .vue-recycle-scroller__item-view {\r\n  height: 100%;\r\n}\r\n</style>\r\n","<template>\r\n  <RecycleScroller\r\n    ref=\"scroller\"\r\n    :items=\"itemsWithSize\"\r\n    :min-item-size=\"minItemSize\"\r\n    :direction=\"direction\"\r\n    key-field=\"id\"\r\n    v-bind=\"$attrs\"\r\n    @resize=\"onScrollerResize\"\r\n    @visible=\"onScrollerVisible\"\r\n    v-on=\"listeners\"\r\n  >\r\n    <template #default=\"{ item: itemWithSize, index, active }\">\r\n      <slot\r\n        v-bind=\"{\r\n          item: itemWithSize.item,\r\n          index,\r\n          active,\r\n          itemWithSize\r\n        }\"\r\n      />\r\n    </template>\r\n    <template #before>\r\n      <slot name=\"before\" />\r\n    </template>\r\n    <template #after>\r\n      <slot name=\"after\" />\r\n    </template>\r\n  </RecycleScroller>\r\n</template>\r\n\r\n<script>\r\nimport RecycleScroller from './RecycleScroller.vue'\r\nimport { props, simpleArray } from './common'\r\n\r\nexport default {\r\n  name: 'DynamicScroller',\r\n\r\n  components: {\r\n    RecycleScroller,\r\n  },\r\n\r\n  provide () {\r\n    let vscrollResizeObserver = undefined\r\n\r\n    if (typeof ResizeObserver !== 'undefined') {\r\n      vscrollResizeObserver = new ResizeObserver(entries => {\r\n        for (const entry of entries) {\r\n          if (entry.target) {\r\n            const event = new CustomEvent('resize', {\r\n                detail: {\r\n                  contentRect: entry.contentRect,\r\n                },\r\n              },\r\n            )\r\n            entry.target.dispatchEvent(event)\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    return {\r\n      vscrollData: this.vscrollData,\r\n      vscrollParent: this,\r\n      vscrollResizeObserver,\r\n      onUpdateScroll: (cb) => this.vScrollMap.push(cb),\r\n    }\r\n  },\r\n\r\n  inheritAttrs: false,\r\n\r\n  props: {\r\n    ...props,\r\n\r\n    minItemSize: {\r\n      type: [Number, String],\r\n      required: true,\r\n    },\r\n  },\r\n\r\n  emits: ['vscroll:update', 'resize', 'visible'],\r\n\r\n  data () {\r\n    return {\r\n      vscrollData: {\r\n        active: true,\r\n        sizes: {},\r\n        validSizes: {},\r\n        keyField: this.keyField,\r\n        simpleArray: false,\r\n      },\r\n      vScrollMap: [],\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    simpleArray,\r\n\r\n    itemsWithSize () {\r\n      const result = []\r\n      const { items, keyField, simpleArray } = this\r\n      const sizes = this.vscrollData.sizes\r\n      for (let i = 0; i < items.length; i++) {\r\n        const item = items[i]\r\n        const id = simpleArray ? i : item[keyField]\r\n        let size = sizes[id]\r\n        if (typeof size === 'undefined' && !this.$_undefinedMap[id]) {\r\n          size = 0\r\n        }\r\n        result.push({\r\n          item,\r\n          id,\r\n          size,\r\n        })\r\n      }\r\n      return result\r\n    },\r\n\r\n    listeners () {\r\n      const listeners = {}\r\n\r\n      for (const key in this.$attrs) {\r\n        if (key.startsWith('on')) {\r\n          if (key !== 'onResize' && key !== 'onVisible') {\r\n            listeners[key] = this.$attrs\r\n          }\r\n        }\r\n      }\r\n\r\n      return listeners\r\n    },\r\n  },\r\n\r\n  watch: {\r\n    items () {\r\n      this.forceUpdate(false)\r\n    },\r\n\r\n    simpleArray: {\r\n      handler (value) {\r\n        this.vscrollData.simpleArray = value\r\n      },\r\n      immediate: true,\r\n    },\r\n\r\n    direction (value) {\r\n      this.forceUpdate(true)\r\n    },\r\n  },\r\n\r\n  created () {\r\n    this.$_updates = []\r\n    this.$_undefinedSizes = 0\r\n    this.$_undefinedMap = {}\r\n  },\r\n\r\n  activated () {\r\n    this.vscrollData.active = true\r\n  },\r\n\r\n  deactivated () {\r\n    this.vscrollData.active = false\r\n  },\r\n\r\n  methods: {\r\n    onScrollerResize () {\r\n      const scroller = this.$refs.scroller\r\n      if (scroller) {\r\n        this.forceUpdate()\r\n      }\r\n      this.$emit('resize')\r\n    },\r\n\r\n    onScrollerVisible () {\r\n      this.vScrollUpdate(false)\r\n      this.$emit('visible')\r\n    },\r\n\r\n    vScrollUpdate(force = false) {\r\n      const data = { force }\r\n      this.$emit('vscroll:update', data)\r\n\r\n      this.vScrollMap.forEach(callback => callback(data))\r\n    },\r\n\r\n    forceUpdate (clear = true) {\r\n      if (clear || this.simpleArray) {\r\n        this.vscrollData.validSizes = {}\r\n      }\r\n      this.vScrollUpdate(true)\r\n    },\r\n\r\n    scrollToItem (index) {\r\n      const scroller = this.$refs.scroller\r\n      if (scroller) scroller.scrollToItem(index)\r\n    },\r\n\r\n    getItemSize (item, index = undefined) {\r\n      const id = this.simpleArray ? (index != null ? index : this.items.indexOf(item)) : item[this.keyField]\r\n      return this.vscrollData.sizes[id] || 0\r\n    },\r\n\r\n    scrollToBottom () {\r\n      if (this.$_scrollingToBottom) return\r\n      this.$_scrollingToBottom = true\r\n      const el = this.$el\r\n      // Item is inserted to the DOM\r\n      this.$nextTick(() => {\r\n        el.scrollTop = el.scrollHeight + 5000\r\n        // Item sizes are computed\r\n        const cb = () => {\r\n          el.scrollTop = el.scrollHeight + 5000\r\n          requestAnimationFrame(() => {\r\n            el.scrollTop = el.scrollHeight + 5000\r\n            if (this.$_undefinedSizes === 0) {\r\n              this.$_scrollingToBottom = false\r\n            } else {\r\n              requestAnimationFrame(cb)\r\n            }\r\n          })\r\n        }\r\n        requestAnimationFrame(cb)\r\n      })\r\n    },\r\n  },\r\n}\r\n</script>\r\n","<template>\r\n  <RecycleScroller\r\n    ref=\"scroller\"\r\n    :items=\"itemsWithSize\"\r\n    :min-item-size=\"minItemSize\"\r\n    :direction=\"direction\"\r\n    key-field=\"id\"\r\n    v-bind=\"$attrs\"\r\n    @resize=\"onScrollerResize\"\r\n    @visible=\"onScrollerVisible\"\r\n    v-on=\"listeners\"\r\n  >\r\n    <template #default=\"{ item: itemWithSize, index, active }\">\r\n      <slot\r\n        v-bind=\"{\r\n          item: itemWithSize.item,\r\n          index,\r\n          active,\r\n          itemWithSize\r\n        }\"\r\n      />\r\n    </template>\r\n    <template #before>\r\n      <slot name=\"before\" />\r\n    </template>\r\n    <template #after>\r\n      <slot name=\"after\" />\r\n    </template>\r\n  </RecycleScroller>\r\n</template>\r\n\r\n<script>\r\nimport RecycleScroller from './RecycleScroller.vue'\r\nimport { props, simpleArray } from './common'\r\n\r\nexport default {\r\n  name: 'DynamicScroller',\r\n\r\n  components: {\r\n    RecycleScroller,\r\n  },\r\n\r\n  provide () {\r\n    let vscrollResizeObserver = undefined\r\n\r\n    if (typeof ResizeObserver !== 'undefined') {\r\n      vscrollResizeObserver = new ResizeObserver(entries => {\r\n        for (const entry of entries) {\r\n          if (entry.target) {\r\n            const event = new CustomEvent('resize', {\r\n                detail: {\r\n                  contentRect: entry.contentRect,\r\n                },\r\n              },\r\n            )\r\n            entry.target.dispatchEvent(event)\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    return {\r\n      vscrollData: this.vscrollData,\r\n      vscrollParent: this,\r\n      vscrollResizeObserver,\r\n      onUpdateScroll: (cb) => this.vScrollMap.push(cb),\r\n    }\r\n  },\r\n\r\n  inheritAttrs: false,\r\n\r\n  props: {\r\n    ...props,\r\n\r\n    minItemSize: {\r\n      type: [Number, String],\r\n      required: true,\r\n    },\r\n  },\r\n\r\n  emits: ['vscroll:update', 'resize', 'visible'],\r\n\r\n  data () {\r\n    return {\r\n      vscrollData: {\r\n        active: true,\r\n        sizes: {},\r\n        validSizes: {},\r\n        keyField: this.keyField,\r\n        simpleArray: false,\r\n      },\r\n      vScrollMap: [],\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    simpleArray,\r\n\r\n    itemsWithSize () {\r\n      const result = []\r\n      const { items, keyField, simpleArray } = this\r\n      const sizes = this.vscrollData.sizes\r\n      for (let i = 0; i < items.length; i++) {\r\n        const item = items[i]\r\n        const id = simpleArray ? i : item[keyField]\r\n        let size = sizes[id]\r\n        if (typeof size === 'undefined' && !this.$_undefinedMap[id]) {\r\n          size = 0\r\n        }\r\n        result.push({\r\n          item,\r\n          id,\r\n          size,\r\n        })\r\n      }\r\n      return result\r\n    },\r\n\r\n    listeners () {\r\n      const listeners = {}\r\n\r\n      for (const key in this.$attrs) {\r\n        if (key.startsWith('on')) {\r\n          if (key !== 'onResize' && key !== 'onVisible') {\r\n            listeners[key] = this.$attrs\r\n          }\r\n        }\r\n      }\r\n\r\n      return listeners\r\n    },\r\n  },\r\n\r\n  watch: {\r\n    items () {\r\n      this.forceUpdate(false)\r\n    },\r\n\r\n    simpleArray: {\r\n      handler (value) {\r\n        this.vscrollData.simpleArray = value\r\n      },\r\n      immediate: true,\r\n    },\r\n\r\n    direction (value) {\r\n      this.forceUpdate(true)\r\n    },\r\n  },\r\n\r\n  created () {\r\n    this.$_updates = []\r\n    this.$_undefinedSizes = 0\r\n    this.$_undefinedMap = {}\r\n  },\r\n\r\n  activated () {\r\n    this.vscrollData.active = true\r\n  },\r\n\r\n  deactivated () {\r\n    this.vscrollData.active = false\r\n  },\r\n\r\n  methods: {\r\n    onScrollerResize () {\r\n      const scroller = this.$refs.scroller\r\n      if (scroller) {\r\n        this.forceUpdate()\r\n      }\r\n      this.$emit('resize')\r\n    },\r\n\r\n    onScrollerVisible () {\r\n      this.vScrollUpdate(false)\r\n      this.$emit('visible')\r\n    },\r\n\r\n    vScrollUpdate(force = false) {\r\n      const data = { force }\r\n      this.$emit('vscroll:update', data)\r\n\r\n      this.vScrollMap.forEach(callback => callback(data))\r\n    },\r\n\r\n    forceUpdate (clear = true) {\r\n      if (clear || this.simpleArray) {\r\n        this.vscrollData.validSizes = {}\r\n      }\r\n      this.vScrollUpdate(true)\r\n    },\r\n\r\n    scrollToItem (index) {\r\n      const scroller = this.$refs.scroller\r\n      if (scroller) scroller.scrollToItem(index)\r\n    },\r\n\r\n    getItemSize (item, index = undefined) {\r\n      const id = this.simpleArray ? (index != null ? index : this.items.indexOf(item)) : item[this.keyField]\r\n      return this.vscrollData.sizes[id] || 0\r\n    },\r\n\r\n    scrollToBottom () {\r\n      if (this.$_scrollingToBottom) return\r\n      this.$_scrollingToBottom = true\r\n      const el = this.$el\r\n      // Item is inserted to the DOM\r\n      this.$nextTick(() => {\r\n        el.scrollTop = el.scrollHeight + 5000\r\n        // Item sizes are computed\r\n        const cb = () => {\r\n          el.scrollTop = el.scrollHeight + 5000\r\n          requestAnimationFrame(() => {\r\n            el.scrollTop = el.scrollHeight + 5000\r\n            if (this.$_undefinedSizes === 0) {\r\n              this.$_scrollingToBottom = false\r\n            } else {\r\n              requestAnimationFrame(cb)\r\n            }\r\n          })\r\n        }\r\n        requestAnimationFrame(cb)\r\n      })\r\n    },\r\n  },\r\n}\r\n</script>\r\n","import { createVNode, nextTick } from 'vue';\r\n\r\nexport default {\r\n  name: 'DynamicScrollerItem',\r\n\r\n  inject: [\r\n    'vscrollData',\r\n    'vscrollParent',\r\n    'onUpdateScroll',\r\n    'vscrollResizeObserver',\r\n  ],\r\n\r\n  props: {\r\n    item: {\r\n      required: true,\r\n    },\r\n\r\n    watchData: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /**\r\n     * Indicates if the view is actively used to display an item.\r\n     */\r\n    active: {\r\n      type: Boolean,\r\n      required: true,\r\n    },\r\n\r\n    index: {\r\n      type: Number,\r\n      default: undefined,\r\n    },\r\n\r\n    sizeDependencies: {\r\n      type: [Array, Object],\r\n      default: null,\r\n    },\r\n\r\n    emitResize: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    tag: {\r\n      type: String,\r\n      default: 'div',\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    id () {\r\n      return this.vscrollData.simpleArray ? this.index : this.item[this.vscrollData.keyField];\r\n    },\r\n\r\n    size () {\r\n      return (this.vscrollData.validSizes[this.id] && this.vscrollData.sizes[this.id]) || 0;\r\n    },\r\n\r\n    finalActive () {\r\n      return this.active && this.vscrollData.active;\r\n    },\r\n  },\r\n\r\n  watch: {\r\n    watchData: 'updateWatchData',\r\n\r\n    id () {\r\n      if (!this.size) {\r\n        this.onDataUpdate();\r\n      }\r\n    },\r\n\r\n    finalActive (value) {\r\n      if (!this.size) {\r\n        if (value) {\r\n          if (!this.vscrollParent.$_undefinedMap[this.id]) {\r\n            this.vscrollParent.$_undefinedSizes++;\r\n            this.vscrollParent.$_undefinedMap[this.id] = true;\r\n          }\r\n        } else {\r\n          if (this.vscrollParent.$_undefinedMap[this.id]) {\r\n            this.vscrollParent.$_undefinedSizes--;\r\n            this.vscrollParent.$_undefinedMap[this.id] = false;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this.vscrollResizeObserver) {\r\n        if (value) {\r\n          this.observeSize();\r\n        } else {\r\n          this.unobserveSize();\r\n        }\r\n      } else if (value && this.$_pendingVScrollUpdate === this.id) {\r\n        this.updateSize();\r\n      }\r\n    },\r\n  },\r\n\r\n  created () {\r\n    if (this.$isServer) return;\r\n\r\n    this.$_forceNextVScrollUpdate = null;\r\n    this.updateWatchData();\r\n\r\n    if (!this.vscrollResizeObserver) {\r\n      for (const k in this.sizeDependencies) {\r\n        this.$watch(() => this.sizeDependencies[k], this.onDataUpdate);\r\n      }\r\n\r\n      this.onUpdateScroll('vscroll:update', this.onVscrollUpdate);\r\n    }\r\n  },\r\n\r\n  mounted () {\r\n    if (this.vscrollData.active) {\r\n      this.updateSize();\r\n      this.observeSize();\r\n    }\r\n  },\r\n\r\n  beforeUnmount () {\r\n    this.unobserveSize();\r\n  },\r\n\r\n  methods: {\r\n    updateSize () {\r\n      if (this.finalActive) {\r\n        if (this.$_pendingSizeUpdate !== this.id) {\r\n          this.$_pendingSizeUpdate = this.id;\r\n          this.$_forceNextVScrollUpdate = null;\r\n          this.$_pendingVScrollUpdate = null;\r\n          this.computeSize(this.id);\r\n        }\r\n      } else {\r\n        this.$_forceNextVScrollUpdate = this.id;\r\n      }\r\n    },\r\n\r\n    updateWatchData () {\r\n      if (this.watchData) {\r\n        this.$_watchData = this.$watch('data', () => {\r\n          this.onDataUpdate();\r\n        }, {\r\n          deep: true,\r\n        });\r\n      } else if (this.$_watchData) {\r\n        this.$_watchData();\r\n        this.$_watchData = null;\r\n      }\r\n    },\r\n\r\n    onVscrollUpdate ({ force }) {\r\n      // If not active, sechedule a size update when it becomes active\r\n      if (!this.finalActive && force) {\r\n        this.$_pendingVScrollUpdate = this.id;\r\n      }\r\n\r\n      if (this.$_forceNextVScrollUpdate === this.id || force || !this.size) {\r\n        this.updateSize();\r\n      }\r\n    },\r\n\r\n    onDataUpdate () {\r\n      this.updateSize();\r\n    },\r\n\r\n    computeSize (id) {\r\n      nextTick(() => {\r\n        if (this.id === id) {\r\n          const width = this.$el.offsetWidth;\r\n          const height = this.$el.offsetHeight;\r\n          this.applySize(width, height);\r\n        }\r\n        this.$_pendingSizeUpdate = null;\r\n      }).then();\r\n    },\r\n\r\n    applySize (width, height) {\r\n      const size = Math.round(this.vscrollParent.direction === 'vertical' ? height : width);\r\n      if (size && this.size !== size) {\r\n        if (this.vscrollParent.$_undefinedMap[this.id]) {\r\n          this.vscrollParent.$_undefinedSizes--;\r\n          this.vscrollParent.$_undefinedMap[this.id] = undefined;\r\n        }\r\n        this.vscrollData.sizes[this.id] = size;\r\n        this.vscrollData.validSizes[this.id] = true;\r\n        if (this.emitResize) this.$emit('resize', this.id);\r\n      }\r\n    },\r\n\r\n    observeSize () {\r\n      if (!this.vscrollResizeObserver) return;\r\n      this.vscrollResizeObserver.observe(this.$el.parentNode);\r\n      this.$el.parentNode.addEventListener('resize', this.onResize);\r\n    },\r\n\r\n    unobserveSize () {\r\n      if (!this.vscrollResizeObserver) return;\r\n      this.vscrollResizeObserver.unobserve(this.$el.parentNode);\r\n      this.$el.parentNode.removeEventListener('resize', this.onResize);\r\n    },\r\n\r\n    onResize (event) {\r\n      const { width, height } = event.detail.contentRect;\r\n      this.applySize(width, height);\r\n    },\r\n  },\r\n\r\n  render () {\r\n    return createVNode(this.tag, null, this.$slots.default());\r\n  },\r\n};\r\n","import config from './config'\r\n\r\nimport RecycleScroller from './components/RecycleScroller.vue'\r\nimport DynamicScroller from './components/DynamicScroller.vue'\r\nimport DynamicScrollerItem from './components/DynamicScrollerItem.js'\r\nimport { version } from '../package.json'\r\n\r\nexport {\r\n  RecycleScroller,\r\n  DynamicScroller,\r\n  DynamicScrollerItem,\r\n}\r\n\r\nfunction registerComponents (app, prefix) {\r\n  app.component(`${prefix}recycle-scroller`, RecycleScroller)\r\n  app.component(`${prefix}RecycleScroller`, RecycleScroller)\r\n  app.component(`${prefix}dynamic-scroller`, DynamicScroller)\r\n  app.component(`${prefix}DynamicScroller`, DynamicScroller)\r\n  app.component(`${prefix}dynamic-scroller-item`, DynamicScrollerItem)\r\n  app.component(`${prefix}DynamicScrollerItem`, DynamicScrollerItem)\r\n}\r\n\r\nconst plugin = {\r\n  version,\r\n  install (app, options) {\r\n    const finalOptions = Object.assign({}, {\r\n      installComponents: true,\r\n      componentsPrefix: '',\r\n    }, options)\r\n\r\n    for (const key in finalOptions) {\r\n      if (typeof finalOptions[key] !== 'undefined') {\r\n        config[key] = finalOptions[key]\r\n      }\r\n    }\r\n\r\n    if (finalOptions.installComponents) {\r\n      registerComponents(app, finalOptions.componentsPrefix)\r\n    }\r\n  },\r\n}\r\n\r\nexport default plugin\r\n"],"names":["itemsLimit","_typeof","props","items","type","Array","required","keyField","String","default","direction","validator","value","includes","scrollParent","node","regex","parents","ps","parentNode","concat","style","prop","getComputedStyle","getPropertyValue","overflow","scroll","test","HTMLElement","SVGElement","i","length","document","scrollingElement","documentElement","simpleArray","supportsPassive","window","opts","Object","defineProperty","get","addEventListener","e","uid","defineComponent","name","components","ResizeObserver","directives","ObserveVisibility","itemSize","Number","minItemSize","sizeField","typeField","buffer","pageMode","Boolean","prerender","emitUpdate","emits","data","pool","totalSize","ready","hoverKey","computed","sizes","accumulator","field","computedMinSize","current","l","size","$_computedMinItemSize","watch","updateVisibleItems","applyPageMode","handler","deep","created","$_startIndex","$_endIndex","$_views","Map","$_unusedViews","$_scrollDirty","$_lastUpdateScrollPosition","$_prerender","mounted","$nextTick","beforeUnmount","removeListeners","methods","addView","index","item","key","view","position","nr","id","used","push","unuseView","fake","unusedViews","unusedPool","set","delete","handleResize","$emit","handleScroll","event","requestAnimationFrame","continuous","clearTimeout","$_refreshTimout","setTimeout","handleVisibilityChange","isVisible","entry","boundingClientRect","width","height","checkItem","checkPositionDiff","count","views","startIndex","endIndex","getScroll","positionDiff","start","end","h","a","b","oldI","Math","ceil","config","itemsLimitError","$_continuous","clear","findIndex","unusedIndex","v","Error","pop","$_sortTimer","sortViews","getListenerTarget","target","$el","body","el","isVertical","scrollState","bounds","getBoundingClientRect","boundsSize","top","left","innerHeight","innerWidth","scrollTop","clientHeight","scrollLeft","clientWidth","addListeners","listenerTarget","passive","removeEventListener","scrollToItem","scrollToPosition","console","log","sort","viewA","viewB","class","_createBlock","_ctx","before","_hoisted_1","_renderSlot","_createVNode","ref","onMouseenter","onMouseleave","active","after","_hoisted_2","onNotify","RecycleScroller","provide","vscrollResizeObserver","undefined","entries","CustomEvent","detail","contentRect","dispatchEvent","vscrollData","vscrollParent","onUpdateScroll","cb","vScrollMap","inheritAttrs","validSizes","itemsWithSize","result","$_undefinedMap","listeners","$attrs","startsWith","forceUpdate","immediate","$_updates","$_undefinedSizes","activated","deactivated","onScrollerResize","scroller","$refs","onScrollerVisible","vScrollUpdate","force","forEach","callback","getItemSize","indexOf","scrollToBottom","$_scrollingToBottom","scrollHeight","_mergeProps","$options","$props","onResize","onVisible","_toHandlers","itemWithSize","inject","watchData","sizeDependencies","emitResize","tag","finalActive","onDataUpdate","observeSize","unobserveSize","$_pendingVScrollUpdate","updateSize","$isServer","$_forceNextVScrollUpdate","updateWatchData","k","$watch","onVscrollUpdate","$_pendingSizeUpdate","computeSize","$_watchData","nextTick","offsetWidth","offsetHeight","applySize","then","round","observe","unobserve","render","createVNode","$slots","registerComponents","app","prefix","component","DynamicScroller","DynamicScrollerItem","plugin","version","install","options","finalOptions","assign","installComponents","componentsPrefix"],"mappings":"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"}